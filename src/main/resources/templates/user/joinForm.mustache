{{> /layout/header}}
<!-- HTTP 통신 -->
<div class="container p-5">
    <!--요청을 하면 localhost:8080/join POST로 요청됨
    x-www-unlencoded는 key-value로 입력되는 방식으로 form tag에서는 name=""에서 key-value를 받는다.    
    username = 사용자입력값 & password = 사용자값 & email = 사용자입력값-->
    <!--name에 변수에 맞는 값이 들어간다.-->
    <div class="card">
        <div class="card-header"><b>회원가입을 해주세요</b></div>
        <div class="card-body">
            <form action="/join" method="post" enctype="application/x-www-form-urlencoded" onsubmit="return valid()">
                <!--onsubmit="return valid()" : form 태그가 제출될 때, 실행되는 JavaScript 함수-->
                <div class="mb-3">
                    <input type="text" id="username" class="form-control" placeholder="Enter username" name="username" value="" required maxlength="20"
                    onchange="usernameChange()">
                    <button type="button" onclick="check()" class="btn btn-warning" id="check-button">중복체크</button>
                    <!-- Form 태그 안의 button의 기본값은 submit이다. -->
                </div>
                <div class="mb-3">
                    <input type="password" class="form-control" placeholder="Enter password" name="password" value="" required maxlength="60">
                </div>
                <div class="mb-3">
                    <input type="email" class="form-control" placeholder="Enter email" name="email" value="" required maxlength="20">
                </div>
                <button type="submit" id="btnJoin" class="btn btn-primary form-control">회원가입</button>
            </form>
        </div>
    </div>
</div>

<!-- AJAX 통신 -->
<script>

// 중복체크를 하지 않은 상태
let usernameSameCheck = false;

// 중복체크 버튼 이벤트 유무 확인
function valid(){
    if(usernameSameCheck){
        return true;
        console.log("test1");
    } else {
        alert("유저네임 중복체크를 해주세요.")
        console.log("test2");
    }
}
</script>


{{> /layout/footer}}